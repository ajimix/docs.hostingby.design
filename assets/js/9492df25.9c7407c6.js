"use strict";(self.webpackChunkseedboxio=self.webpackChunkseedboxio||[]).push([[3040,8587],{7182:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return r},default:function(){return c},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return d}});var n=a(3117),s=(a(7294),a(3905)),i=a(5532);const o={id:"medusa",title:"Medusa",sidebar_label:"Medusa"},r=void 0,l={unversionedId:"application-hosting/applications/medusa",id:"application-hosting/applications/medusa",title:"Medusa",description:"(py)Medusa is an automatic video library manager for TV Shows written in Python. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",source:"@site/docs/application-hosting/applications/medusa.mdx",sourceDirName:"application-hosting/applications",slug:"/application-hosting/applications/medusa",permalink:"/application-hosting/applications/medusa",draft:!1,editUrl:"https://github.com/hostingbydesign/docs.hostingby.design/tree/master/docs/application-hosting/applications/medusa.mdx",tags:[],version:"current",frontMatter:{id:"medusa",title:"Medusa",sidebar_label:"Medusa"},sidebar:"docs",previous:{title:"Autodl",permalink:"/application-hosting/applications/autodl"},next:{title:"Sonarr",permalink:"/application-hosting/applications/sonarr"}},u={},d=[{value:"Initial Setup",id:"initial-setup",level:2},{value:"How to Access",id:"how-to-access",level:2},{value:"Service Management",id:"service-management",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Connect to other clients",id:"connect-to-other-clients",level:2},{value:"rTorrent",id:"rtorrent",level:3},{value:"Deluge (via Daemon)",id:"deluge-via-daemon",level:3},{value:"Deluge (via Web)",id:"deluge-via-web",level:3},{value:"NZBget",id:"nzbget",level:3}],p={toc:d};function c(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"(py)Medusa is an automatic video library manager for TV Shows written in Python. It watches for new episodes of your favorite shows, and when they are posted it does its magic."),(0,s.kt)("h2",{id:"initial-setup"},"Initial Setup"),(0,s.kt)("p",null,"First you must connect to your slot via ssh. If you need help connecting to the server, please read the help article ",(0,s.kt)("a",{parentName:"p",href:"/application-hosting/getting-started/how-do-i-connect"},"here"),"."),(0,s.kt)("p",null,"Installing Medusa is easy. Simply issue the following command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:"main",main:!0},"box install medusa\n")),(0,s.kt)("p",null,"This command will configure medusa for your user."),(0,s.kt)("h2",{id:"how-to-access"},"How to Access"),(0,s.kt)("p",null,"After installation, you can access Medusa at the url: ",(0,s.kt)("inlineCode",{parentName:"p"},"https://<yourhostname.io>/medusa")),(0,s.kt)("h2",{id:"service-management"},"Service Management"),(0,s.kt)("p",null,"Like all box configured applications, you can manage Medusa via SSH with box with start, stop, restart, enable and disable commands."),(0,s.kt)(i.default,{service:"medusa",mdxType:"SystemdTabs"}),(0,s.kt)("h2",{id:"configuration"},"Configuration"),(0,s.kt)("p",null,"If you are unfamiliar with Medusa, please check out their ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/pymedusa/Medusa/wiki"},"wiki")," for assistance in getting your trackers setup or learning how to add shows or setup post-processing."),(0,s.kt)("h2",{id:"connect-to-other-clients"},"Connect to other clients"),(0,s.kt)("h3",{id:"rtorrent"},"rTorrent"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-plaintext"},"Send torrent files to: rTorrent\nrTorrent host/port: https://127.0.0.1/rutorrent/plugins/httprpc/action.php\nHttp Authentication: Basic\nVerify certificate: off (shouldn't need to be turned on)\nrTorrent username: <your username>\nrTorrent password: <your password>\nAdd label to torrent: TV (or anything else you desire)\nDownloaded files location: ~/torrents/rtorrent (or a custom directory)\n")),(0,s.kt)("h3",{id:"deluge-via-daemon"},"Deluge (via Daemon)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-plaintext"},"Send torrent files to: Deluge (via Daemon)\nDeluge: 127.0.0.1:<your daemon port>\nVerify certificate: off\nDeluge username: <your username>\nDeluge password: <your password>\nAdd label to torrent: TV (or anything else you desire)\n* label plugin must be enabled in Deluge if you add a label\n")),(0,s.kt)("h3",{id:"deluge-via-web"},"Deluge (via Web)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-plaintext"},"Send torrent files to: Deluge (via Web)\nDeluge: 127.0.0.1:<your web port>\nVerify Certificate: off\nDeluge Password: <your password>\nAdd label to torrent: TV (or anything else you desire)\n* label plugin must be enabled in Deluge if you add a label\n")),(0,s.kt)("h3",{id:"nzbget"},"NZBget"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-plaintext"},'Send nzb files to: nzbget\nNZBget host:port: 127.0.0.1/nzbget\nConnect using HTTPS: ON\nnzbget username: <your username>\nnzbget Password: <your password>\nAdd label to torrent: Series (or anything else you desire)\n* label must exist under "Categories" in nzbGet\n')))}c.isMDXComponent=!0},5532:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var n=a(3117),s=(a(7294),a(3905)),i=a(4866),o=a(5162),r=a(814);const l={},u=void 0,d={unversionedId:"application-hosting/snippets/systemdtabs",id:"application-hosting/snippets/systemdtabs",title:"systemdtabs",description:"<Tabs",source:"@site/docs/application-hosting/snippets/systemdtabs.mdx",sourceDirName:"application-hosting/snippets",slug:"/application-hosting/snippets/systemdtabs",permalink:"/application-hosting/snippets/systemdtabs",draft:!1,editUrl:"https://github.com/hostingbydesign/docs.hostingby.design/tree/master/docs/application-hosting/snippets/systemdtabs.mdx",tags:[],version:"current",frontMatter:{}},p={},c=[],m={toc:c};function g(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("div",{className:"code"},(0,s.kt)(i.Z,{defaultValue:"start",values:[{label:"Status",value:"status"},{label:"Start",value:"start"},{label:"Stop",value:"stop"},{label:"Restart",value:"restart"},{label:"Enable",value:"enable"},{label:"Disable",value:"disable"}],mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"status",mdxType:"TabItem"},(0,s.kt)(r.Z,{children:"box status "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(o.Z,{value:"start",mdxType:"TabItem"},(0,s.kt)(r.Z,{children:"box start "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(o.Z,{value:"stop",mdxType:"TabItem"},(0,s.kt)(r.Z,{children:"box stop "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(o.Z,{value:"restart",mdxType:"TabItem"},(0,s.kt)(r.Z,{children:"box restart "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(o.Z,{value:"enable",mdxType:"TabItem"},(0,s.kt)(r.Z,{children:"box enable "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(o.Z,{value:"disable",mdxType:"TabItem"},(0,s.kt)(r.Z,{children:"box disable "+a.service,className:"bash",mdxType:"CodeBlock"})))))}g.isMDXComponent=!0}}]);