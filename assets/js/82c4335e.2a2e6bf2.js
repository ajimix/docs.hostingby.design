"use strict";(self.webpackChunkseedboxio=self.webpackChunkseedboxio||[]).push([[9763],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return y}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=c(r),m=s,y=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(y,i(i({ref:t},l),{},{components:r})):n.createElement(y,i({ref:t},l))}));function y(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,i=new Array(o);i[0]=m;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[p]="string"==typeof e?e:s,i[1]=a;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4694:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return a},toc:function(){return c}});var n=r(3117),s=(r(7294),r(3905));const o={id:"systemd",title:"Systemd (Startup) Services",sidebar:"Systemd Services"},i=void 0,a={unversionedId:"appslots/guides/systemd",id:"appslots/guides/systemd",title:"Systemd (Startup) Services",description:"For users asking for ways to start custom apps as services on boot or just more easily, I recommend systemd --user services for this job.",source:"@site/docs/appslots/guides/systemd.md",sourceDirName:"appslots/guides",slug:"/appslots/guides/systemd",permalink:"/appslots/guides/systemd",draft:!1,editUrl:"https://github.com/hostingbydesign/docs.hostingby.design/docs/appslots/guides/systemd.md",tags:[],version:"current",frontMatter:{id:"systemd",title:"Systemd (Startup) Services",sidebar:"Systemd Services"},sidebar:"docs",previous:{title:"Making Torrents with mktorrent",permalink:"/appslots/guides/mktorrent"},next:{title:"Backups",permalink:"/shared-storage/administration/backup"}},u={},c=[],l={toc:c};function p(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"For users asking for ways to start custom apps as services on boot or just more easily, I recommend ",(0,s.kt)("inlineCode",{parentName:"p"},"systemd --user")," services for this job."),(0,s.kt)("p",null,"Systemd can be used in ",(0,s.kt)("inlineCode",{parentName:"p"},"user")," mode without need to call sudo to make changes to service states."),(0,s.kt)("p",null,"User services can be stored like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"~/.config/systemd/user/foo.service\n")),(0,s.kt)("p",null,"Just ",(0,s.kt)("inlineCode",{parentName:"p"},"mkdir -p ~/.config/systemd/user")," if it does not exist"),(0,s.kt)("p",null,"Once there, this service file can be called like any normal systemd service but with the ",(0,s.kt)("inlineCode",{parentName:"p"},"--user")," argument."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"systemctl enable --now --user foo.service\n")),(0,s.kt)("p",null,"foo.service would now attempt to be running in your user's context. You can check it with"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"systemctl status --user foo.service\n")),(0,s.kt)("p",null,"Some notes about service files:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Do not include the user or group variables. The systemd service will fail if you specify anything because the service implicitly runs as your user."),(0,s.kt)("li",{parentName:"ul"},"Unless you are bound to the subnet port, do not forget authentication!"),(0,s.kt)("li",{parentName:"ul"},"If you are using an rc port, consider binding it to your subnet IP. You can easily communicate with your subnet ip via CLI"),(0,s.kt)("li",{parentName:"ul"},"At least, choose a unique port. Consider binding to your subnet port whenever possible (fun fact: subnet bound ports are accessible from your wireguard VPN)"),(0,s.kt)("li",{parentName:"ul"},"You need to start your mounts before the media center apps start, so you can try either a ",(0,s.kt)("inlineCode",{parentName:"li"},"Before=plex@username")," or a ",(0,s.kt)("inlineCode",{parentName:"li"},"PostStart=/usr/bin/sudo box restart plex"))))}p.isMDXComponent=!0}}]);